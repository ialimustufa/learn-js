#html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="calculator">
        <input type="text" class="calculator-screen" id="calculator-screen" disabled />
        <div class="calculator-keys">
            <button type="button" class="operator" value="+">+</button>
            <button type="button" class="operator" value="-">-</button>
            <button type="button" class="operator" value="*">&times;</button>
            <button type="button" class="operator" value="/">&divide;</button>
            <button type="button" value="7">7</button>
            <button type="button" value="8">8</button>
            <button type="button" value="9">9</button>
            <button type="button" value="4">4</button>
            <button type="button" value="5">5</button>
            <button type="button" value="6">6</button>
            <button type="button" value="1">1</button>
            <button type="button" value="2">2</button>
            <button type="button" value="3">3</button>
            <button type="button" value="0">0</button>
            <button type="button" class="decimal" value=".">.</button>
            <button type="button" class="all-clear" value="all-clear">AC</button>
            <button type="button" class="equal-sign" value="=">=</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>

#css
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f4f4f9;
    font-family: 'Roboto', sans-serif;
}

.calculator {
    border-radius: 10px;
    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
    width: 400px;
    background-color: #fff;
}

.calculator-screen {
    width: 100%;
    height: 80px;
    border: none;
    background-color: #252525;
    color: white;
    text-align: right;
    padding-right: 20px;
    padding-left: 10px;
    font-size: 2.5rem;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

.calculator-keys {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    padding: 20px;
}

button {
    height: 60px;
    border-radius: 5px;
    border: none;
    font-size: 1.5rem;
    background-color: #f1f3f4;
    color: #333;
    cursor: pointer;
    transition: background-color 0.3s ease-in-out;
}

button.operator {
    background-color: #ff9f43;
    color: white;
}

button.equal-sign {
    background-color: #00b894;
    color: white;
    grid-column: span 2;
}

button.all-clear {
    background-color: #ff7675;
    color: white;
}

button:hover {
    background-color: #d1d1d1;
}

#js code
document.addEventListener('DOMContentLoaded', function () {
    const screen = document.getElementById('calculator-screen');
    const keys = document.querySelector('.calculator-keys');
    let currentInput = '0';
    let previousInput = '';
    let operator = '';

    keys.addEventListener('click', function (e) {
        const { target } = e;
        const { value } = target;

        if (!target.matches('button')) return;

        switch (value) {
            case '+':
            case '-':
            case '*':
            case '/':
                handleOperator(value);
                break;
            case '=':
                calculate();
                break;
            case 'all-clear':
                clear();
                break;
            case '.':
                inputDecimal(value);
                break;
            default:
                inputNumber(value);
                break;
        }

        updateScreen();
    });

    function handleOperator(nextOperator) {
        const inputValue = parseFloat(currentInput);

        if (operator && previousInput) {
            calculate();
        }

        operator = nextOperator;
        previousInput = currentInput;
        currentInput = '0';
    }

    function calculate() {
        let result = 0;
        const previous = parseFloat(previousInput);
        const current = parseFloat(currentInput);

        if (isNaN(previous) || isNaN(current)) return;

        switch (operator) {
            case '+':
                result = previous + current;
                break;
            case '-':
                result = previous - current;
                break;
            case '*':
                result = previous * current;
                break;
            case '/':
                result = previous / current;
                break;
            default:
                return;
        }

        currentInput = result.toString();
        operator = '';
        previousInput = '';
    }

    function clear() {
        currentInput = '0';
        previousInput = '';
        operator = '';
    }

    function inputDecimal(dot) {
        if (!currentInput.includes(dot)) {
            currentInput += dot;
        }
    }

    function inputNumber(number) {
        if (currentInput === '0') {
            currentInput = number;
        } else {
            currentInput += number;
        }
    }

    function updateScreen() {
        screen.value = currentInput;
    }
});
